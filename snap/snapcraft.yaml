%YAML 1.1
---
# Snapcraft Recipe for Zenity
# ------------------------------
# This file is in the YAML data serialization format:
# http://yaml.org
# For the spec. of writing this file refer the following documentation:
# * The snapcraft format
#   https://docs.snapcraft.io/the-snapcraft-format/8337
# * Snap Documentation
#   https://docs.snapcraft.io
# * Topics under the doc category in the Snapcraft Forum
#   https://forum.snapcraft.io/c/doc
# For support refer to the snapcraft section in the Snapcraft Forum:
# https://forum.snapcraft.io/c/snapcraft

# All following comments, including this one, are designed to be stripped
# before contributing the recipe to the upstream

# Zenity, zenity, zenity-launch
# are placeholders text meant to be replaced by appropriate content
name: zenity
title: Zenity (UNOFFICIAL)
summary: Display dialog boxes from the commandline and shell scripts
description: |
  This is zenity - a rewrite of gdialog, the GNOME port of dialog
  which allows you to display dialog boxes from the commandline
  and shell scripts. If you understand, things are just as they
  are. If you don't understand, things are just as they are.

  **Snap specific information**

  This is NOT an official distribution of Zenity, refer the snap issue
  tracker for any problems regarding the use of this snap:

      https://github.com/Lin-Buo-Ren/zenity-snap/issues

# The path of icon to represent the snap, relative to the source tree directory
# Only PNG or SVG image is supported, dimension must be greater than 256x256px
#icon: snap/gui/zenity.png

# The license of this application, in SPDX format
# NOTE: Currently only supports SPDX 2.1 license expressions, as described in Appendix IV of
# https://spdx.org/spdx-specification-21-web-version
# Supported expressions:
# https://github.com/snapcore/snapd/blob/HEAD/spdx/licenses.go
license: LGPL-2.0

# Version string just for humans, typically '1.2+git' or '1.3.2'
# The wrapping single quotes are often required to avoid the version string
# being accidentally interpreted as a YAML non-string(like '1', '1.2').
# http://yaml.org/type
# https://arp242.net/weblog/yaml_probably_not_so_great_after_all.html#surprising-behaviour
# NOTE: This key is mutual exclusive with the `adopt-info` key
#version: Derived from the part specified by the `adopt-info` property

# Extract metadata from the main snap part
# https://forum.snapcraft.io/t/extracting-information-from-sources-in-snapcraft-parts/4642
adopt-info: main

# Base runtime
# The common runtime for the snap to run on, or `bare` for static linked applications
base: core

# Security confinement
# Use `devmode` to getting started
# Flip to `strict` once you have the right plugs and slots,
# or `classic` once you determine that strict confinement is not currently possible
confinement: strict

# Snap Grade
# Use `devel` to getting started
# Flip to `stable` once you determine that the snap is matured, only `stable` grade
# snaps can be promoted to `candidate` and `stable` channels
grade: stable

# Run `snapcraft help sources` for supported keywords on pulling a part's source ingredients
# Run `snapcraft plugins` for supported build helper plugins
# Run `snapcraft help plugins` for supported keywords on building a part
# For `override-*` scriptlets used to modify behavior of certain part's lifecycle phase, check out:
# https://docs.snapcraft.io/scriptlets/4892
parts:
  # Files to patch the files in the snap
  patching:
    source: snap/local/patching
    plugin: dump
    organize:
      '*': patching/
    prime:
    - -*

  # Launcher programs to fix problems at runtime
  launchers:
    source: snap/local/launchers
    plugin: dump
    organize:
      '*': bin/
    stage:
    - -bin/README.*

  # Programs to modify the behavior of each step of the snapcraft lifecycles
  scriptlets:
    source: snap/local/scriptlets
    plugin: dump
    organize:
      '*': scriptlets/
    prime:
    - -*

  # Check out the tagged release revision if it isn't promoted to the stable channel
  # https://forum.snapcraft.io/t/selective-checkout-check-out-the-tagged-release-revision-if-it-isnt-promoted-to-the-stable-channel/10617
  selective-checkout:
    plugin: nil
    build-packages:
    - git
    stage-snaps:
    - selective-checkout
    prime:
    - -*

  # Remote part for support of various desktop technologies
  # Refer: https://github.com/ubuntu/snapcraft-desktop-helpers/blob/master/snapcraft.yaml
  desktop-gnome-platform:
    source: https://github.com/ubuntu/snapcraft-desktop-helpers.git
    source-depth: 1
    source-subdir: gtk

    plugin: make
    build-packages:
    - gcc
    override-build: |
      snapcraftctl build
      mkdir -pv $SNAPCRAFT_PART_INSTALL/gnome-platform

  main:
    after:
    - patching
    - selective-checkout

    source: https://gitlab.gnome.org/GNOME/zenity.git
    source-depth: 30
    override-pull: |
      snapcraftctl pull

      "$SNAPCRAFT_STAGE"/scriptlets/selective-checkout \
        --append-packaging-revision \
        --release-tag-prefix=ZENITY_

    plugin: autotools
    build-packages:
    - autoconf-archive
    - build-essential
    - gettext
    - libgtk-3-dev
    - libnotify-dev
    - libwebkit2gtk-4.0-dev
    - yelp-tools

    override-build: |
      set -o nounset
      patch \
        --strip=1 \
        < "${SNAPCRAFT_STAGE}"/patching/zenity-ui-snap-aware.patch

      snapcraftctl build

# Apps that are exposed by the snap package
# If the _app_name_ is identical with the _snap_name_ it can be directly run
# with `_snap_name_` or `snap run _snap_name_` commands, otherwise it can only be run
# via `_snap_name_._app_name_` or `snap run _snap_name_._app_name_`
apps:
  zenity:
    # The adapter to set up runtime environment at the launch of the snap
    # NOTE: The `command-chain` property is only supported by the `full` adapter
    adapter: full

    # An *relative path* to an executable file root from the `prime` directory to be executed, and its command-line arguments
    # NOTE: The right angle bracket at the beginning of the value of the `command` keyword starts a YAML folded style block scalar, refer the following spec document for more info: http://yaml.org/spec/1.2/spec.html#id2796251
    command: bin/zenity

    # The commands that are run, in order, before running the one specified by the `command` key
    command-chain:
    - bin/desktop-launch
    - bin/zenity-launch

  greeting:
    command: >
      desktop-launch
      zenity
        --info
        --text='Hello Zenity from a snap!'
        --width=600

  obsoletion-notice:
    command: >
      desktop-launch
      zenity
        --warning
        --text='This snap has now been <b>superseded</b> and will NOT receive any further updates!  Please remove this snap and install the \`_snap_name_\` snap as soon as possible!'
        --width=600

# Refer the following documentation for asserting interface plugs and slots in a security confined snap:
# Interface management - doc - snapcraft.io
# https://docs.snapcraft.io/interface-management/6154
# Supported interfaces - doc - snapcraft.io
# https://docs.snapcraft.io/supported-interfaces/7744
# Non-A/C: Non-autoconnect interface
plugs:
  # Common desktop interfaces
  # https://forum.snapcraft.io/t/the-desktop-interfaces/2042
  desktop:
  desktop-legacy:
  unity7:
  wayland:

  # GNOME and Gtk runtime via content sharing
  # https://forum.snapcraft.io/t/desktop-app-support-gtk/6834
  gnome-3-26-1604:
    interface: content
    target: $SNAP/gnome-platform
    default-provider: gnome-3-26-1604

  # Gtk Common Themes support
  # https://forum.snapcraft.io/t/how-to-use-the-system-gtk-theme-via-the-gtk-common-themes-snap/6235
  gsettings:
  gtk-3-themes:
    interface: content
    target: $SNAP/data-dir/themes
    default-provider: gtk-common-themes
  icon-themes:
    interface: content
    target: $SNAP/data-dir/icons
    default-provider: gtk-common-themes
  sound-themes:
    interface: content
    target: $SNAP/data-dir/sounds
    default-provider: gtk-common-themes

  # Regular files access
  #home:
  #removable-media: # Non-A/C

  # Network access
  #network:

#slots:
